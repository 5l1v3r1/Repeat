package core;
import core.userDefinedTask.UserDefinedAction;
import core.userDefinedTask.SharedVariables;
import core.userDefinedTask.Tools;
import core.controller.Core;
import core.controller.MouseCore;
import core.controller.KeyboardCore;
import core.keyChain.ActivationPhrase;
import core.keyChain.KeyChain;
import core.keyChain.KeySequence;
import core.keyChain.KeyStroke;
import core.keyChain.MouseGesture;
import core.keyChain.TaskActivation;
import core.userDefinedTask.TaskInvoker;
import java.util.List;
import java.util.ArrayList;
import java.awt.Point;
import static java.awt.event.KeyEvent.*;
import static java.awt.event.InputEvent.BUTTON1_MASK;
import static java.awt.event.InputEvent.BUTTON3_MASK;
import utilities.swing.SwingUtil.OptionPaneUtil;
import utilities.swing.SwingUtil.DialogUtil;

public class CustomAction extends UserDefinedAction {
    public void action(final Core c) throws InterruptedException {
    	SharedVariables v = new SharedVariables(getNamespace());
        KeyboardCore k = c.keyBoard();
        MouseCore m = c.mouse();
        TaskInvoker ti = this.taskInvoker; // To execute other tasks dynamically.
        TaskActivation activation = this.invoker;
        KeyChain invokingKeyChain = activation.getFirstHotkey();
        KeySequence invokingKeySequence = activation.getFirstKeySequence();
        List<KeyStroke> kc = invokingKeyChain == null ? new ArrayList<KeyStroke>() : invokingKeyChain.getKeyStrokes();
        List<KeyStroke> ks = invokingKeySequence == null ? new ArrayList<KeyStroke>() : invokingKeySequence.getKeyStrokes();
		MouseGesture mg = activation.getFirstMouseGesture();
		ActivationPhrase p = activation.getFirsPhrase();
        /*Begin generated code*/

    }

    @Override
    public String getNamespace() {
    	return SharedVariables.GLOBAL_NAMESPACE;
    }
}